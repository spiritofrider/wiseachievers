{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\nlet CareerProfilerComponent = class CareerProfilerComponent {\n  constructor(storageService, common, router) {\n    this.storageService = storageService;\n    this.common = common;\n    this.router = router;\n    this.questionIncrement = new EventEmitter();\n    this.finalObj = new EventEmitter();\n    this.submitExampleTestEmitter = new EventEmitter();\n    this.traverseTestEmitter = new EventEmitter();\n    this.mainTestObject = [];\n    this.currentQuestion = 0;\n    this.preferenceObject = {\n      id: \"\",\n      question: \"\",\n      FirstPreferance: \"\",\n      SecondPreferance: \"\",\n      ThirdPreferance: \"\",\n      FirstPreferanceIndex: null,\n      SecondPreferanceIndex: null,\n      ThirdPreferanceIndex: null,\n      FirstPreferanceOption: \"\",\n      SecondPreferanceOption: \"\",\n      ThirdPreferanceOption: \"\"\n    };\n    this.choiceObjectTest3 = {\n      id: \"\",\n      question: \"\",\n      selected: \"\",\n      category: \"\",\n      value: \"\"\n    };\n  }\n\n  ngOnInit() {\n    console.log(this.TestType, this.TestType == \"4\", this.TestType != \"4\");\n  }\n\n  ngOnChanges() {\n    this.isAdmin = this.common.tokenDecryption(this.storageService.getCookie(\"token\"))[\"isAdmin\"];\n\n    if (!this.submissionPart) {\n      this.resetPreferenceObject();\n      this.currentQuestion = 0;\n      this.mainTestObject = [];\n    }\n  }\n\n  travesingPart(testType) {\n    this.traverseTestEmitter.emit([testType, this.TestType]);\n  }\n\n  goToMainScreen() {\n    this.router.navigate([\"base/test\"]);\n  }\n\n  nextQuestion() {\n    if (this.currentQuestion < this.TestQuiz.length - 1) {\n      this.currentQuestion += 1;\n      this.CheckBoxLogicCommon();\n    }\n  }\n\n  prevQues() {\n    if (this.currentQuestion > 0) {\n      this.currentQuestion -= 1;\n    }\n\n    this.CheckBoxLogicCommon();\n  }\n\n  submitExampleTest() {\n    this.TestType == \"3\" ? this.finalObj.emit(this.mainTestObject) : \"\";\n    this.submitExampleTestEmitter.emit(\"test\");\n  }\n\n  CheckBoxLogicCommon() {\n    this.resetPreferenceObject();\n    this.questionIncrement.emit(this.currentQuestion);\n    const filledQues = this.mainTestObject.find(e => e.id == this.TestQuiz[this.currentQuestion].qno);\n\n    if (filledQues) {\n      setTimeout(() => {\n        if (filledQues[\"FirstPreferanceIndex\"]) {\n          document.getElementById(`f${filledQues[\"FirstPreferanceIndex\"]}`)[\"checked\"] = true;\n        }\n\n        if (filledQues[\"SecondPreferanceIndex\"]) {\n          document.getElementById(`s${filledQues[\"SecondPreferanceIndex\"]}`)[\"checked\"] = true;\n        }\n\n        if (filledQues[\"ThirdPreferanceIndex\"]) {\n          document.getElementById(`t${filledQues[\"ThirdPreferanceIndex\"]}`)[\"checked\"] = true;\n        }\n      }, 0);\n    }\n  } //for test for relation '3'\n\n\n  choiceSelected(e, qno, question, category, value) {\n    this.choiceObjectTest3[\"id\"] = qno;\n    this.choiceObjectTest3[\"question\"] = question;\n    this.choiceObjectTest3[\"category\"] = category;\n    this.choiceObjectTest3[\"value\"] = value;\n    this.choiceObjectTest3[\"selected\"] = e[\"target\"][\"defaultValue\"];\n    let filledQues = this.mainTestObject.filter(e => e[\"id\"] == qno);\n\n    if (filledQues.length < 1) {\n      this.mainTestObject.push(this.choiceObjectTest3);\n    } else {\n      const Index = this.mainTestObject.findIndex(e => e.id == qno);\n      this.mainTestObject[Index][\"value\"] = this.choiceObjectTest3[\"value\"];\n      this.mainTestObject[Index][\"selected\"] = e[\"target\"][\"defaultValue\"];\n      console.log(\"mainObj\", this.mainTestObject);\n    }\n\n    this.resetChoiceObject();\n  }\n\n  preferenceSelection(type, e, index, option) {\n    const filledQues = this.mainTestObject.find(e => e[\"id\"] == this.TestQuiz[this.currentQuestion].qno);\n\n    if (filledQues) {\n      this.preferenceObject = filledQues;\n    }\n\n    this.preferenceObject[\"question\"] = this.TestQuiz[this.currentQuestion].question;\n    this.preferenceObject[\"id\"] = this.TestQuiz[this.currentQuestion].qno;\n\n    if (type == \"First\") {\n      this.radioButtonCheckLogic(type, \"Second\", \"Third\", index, e, option, \"f\");\n    } else if (type == \"Second\") {\n      this.radioButtonCheckLogic(type, \"First\", \"Third\", index, e, option, \"s\");\n    } else if (type == \"Third\") {\n      this.radioButtonCheckLogic(type, \"First\", \"Second\", index, e, option, \"t\");\n    }\n\n    if (Object.values(this.preferenceObject).every(v => v)) {\n      let filledQues = this.mainTestObject.filter(e => e[\"id\"] == this.TestQuiz[this.currentQuestion].qno);\n\n      if (filledQues.length < 1) {\n        this.mainTestObject.push(this.preferenceObject);\n      } else {\n        this.mainTestObject.map(obj => filledQues.find(o => o.id === obj.id) || obj);\n      }\n    }\n\n    this.finalObj.emit(this.mainTestObject);\n  }\n\n  resetPreferenceObject() {\n    this.preferenceObject = {\n      id: \"\",\n      question: \"\",\n      FirstPreferance: \"\",\n      SecondPreferance: \"\",\n      ThirdPreferance: \"\",\n      FirstPreferanceIndex: null,\n      SecondPreferanceIndex: null,\n      ThirdPreferanceIndex: null,\n      FirstPreferanceOption: \"\",\n      SecondPreferanceOption: \"\",\n      ThirdPreferanceOption: \"\"\n    };\n  }\n\n  resetChoiceObject() {\n    this.choiceObjectTest3 = {\n      id: \"\",\n      question: \"\",\n      selected: \"\",\n      category: \"\",\n      value: \"\"\n    };\n  }\n\n  radioButtonCheckLogic(prefType, prefType2nd, prefType3rd, index, e, option, id) {\n    if (!!this.preferenceObject[`${prefType}PreferanceIndex`]) {\n      document.getElementById(`${id}${this.preferenceObject[`${prefType}PreferanceIndex`]}`)[\"checked\"] = false;\n    }\n\n    if (this.preferenceObject[`${prefType2nd}PreferanceIndex`] == index) {\n      this.preferenceObject[`${prefType2nd}PreferanceIndex`] = null;\n    }\n\n    if (this.preferenceObject[`${prefType3rd}PreferanceIndex`] == index) {\n      this.preferenceObject[`${prefType3rd}PreferanceIndex`] = null;\n    }\n\n    this.preferenceObject[`${prefType}PreferanceIndex`] = index;\n    this.preferenceObject[`${prefType}Preferance`] = e[\"target\"][\"defaultValue\"];\n    this.preferenceObject[`${prefType}PreferanceOption`] = option;\n  }\n\n};\n\n__decorate([Input()], CareerProfilerComponent.prototype, \"TestQuiz\", void 0);\n\n__decorate([Input()], CareerProfilerComponent.prototype, \"submissionPart\", void 0);\n\n__decorate([Input()], CareerProfilerComponent.prototype, \"TestType\", void 0);\n\n__decorate([Input()], CareerProfilerComponent.prototype, \"firstRelation\", void 0);\n\n__decorate([Output()], CareerProfilerComponent.prototype, \"questionIncrement\", void 0);\n\n__decorate([Output()], CareerProfilerComponent.prototype, \"finalObj\", void 0);\n\n__decorate([Output()], CareerProfilerComponent.prototype, \"submitExampleTestEmitter\", void 0);\n\n__decorate([Output()], CareerProfilerComponent.prototype, \"traverseTestEmitter\", void 0);\n\nCareerProfilerComponent = __decorate([Component({\n  selector: \"app-career-profiler\",\n  templateUrl: \"./career-profiler.component.html\",\n  styleUrls: [\"./career-profiler.component.scss\"]\n})], CareerProfilerComponent);\nexport { CareerProfilerComponent };","map":null,"metadata":{},"sourceType":"module"}