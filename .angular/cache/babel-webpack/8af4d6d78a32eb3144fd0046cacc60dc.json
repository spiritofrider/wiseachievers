{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../test.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/pager.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../career-profiler/career-profiler.component\";\n\nconst _c0 = function (a0) {\n  return {\n    \"activeClass\": a0\n  };\n};\n\nfunction TestScreenComponent_div_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ques_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"b\", ques_r4, \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ques_r4 == ctx_r1.currentQuestion));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ques_r4 + 1);\n  }\n}\n\nfunction TestScreenComponent_div_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"sub\");\n    i0.ɵɵelement(2, \"i\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"sub\");\n    i0.ɵɵelement(4, \"i\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"sub\");\n    i0.ɵɵelement(6, \"i\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TestScreenComponent_div_3_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TestScreenComponent_div_3_div_6_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.submitExampleTest();\n    });\n    i0.ɵɵtext(2, \"Submit Test\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TestScreenComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"h5\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵtemplate(4, TestScreenComponent_div_3_div_4_Template, 3, 5, \"div\", 6);\n    i0.ɵɵtemplate(5, TestScreenComponent_div_3_div_5_Template, 7, 0, \"div\", 7);\n    i0.ɵɵtemplate(6, TestScreenComponent_div_3_div_6_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"app-career-profiler\", 9);\n    i0.ɵɵlistener(\"questionIncrement\", function TestScreenComponent_div_3_Template_app_career_profiler_questionIncrement_7_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.questionIncremented($event);\n    })(\"finalObj\", function TestScreenComponent_div_3_Template_app_career_profiler_finalObj_7_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.finalObjReturned($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Career Interest Profiler : Part \", ctx_r0.uniqueRelation[0], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.incrementBoxes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.TestQuiz.length > 3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.currentQuestion == ctx_r0.TestQuiz.length - 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"TestQuiz\", ctx_r0.TestQuiz)(\"submissionPart\", ctx_r0.submissionPart);\n  }\n}\n\nexport let TestScreenComponent = /*#__PURE__*/(() => {\n  class TestScreenComponent {\n    constructor(testService, router, pagerService) {\n      this.testService = testService;\n      this.router = router;\n      this.pagerService = pagerService;\n      this.preferenceObject = {\n        question: \"\",\n        FirstPreferance: \"\",\n        SecondPreferance: \"\",\n        ThirdPreferance: \"\",\n        FirstPreferanceIndex: null,\n        SecondPreferanceIndex: null,\n        ThirdPreferanceIndex: null\n      };\n      this.submissionPart = true;\n      this.mainTestObject = [];\n      this.answerSheet = [];\n      this.PaginationControl = {\n        ques: 0,\n        boolVal: false\n      };\n      this.currentQuestion = 0;\n    }\n\n    ngOnInit() {\n      this.getTest1list(); //this.TestQuiz = this.testExample.getExampleTest();\n    }\n\n    questionIncremented(qno) {\n      console.log(\"emit freq\", qno);\n      this.currentQuestion = qno;\n      this.PaginationControl.ques = qno;\n      this.boxPaginationLogic();\n    }\n\n    finalObjReturned(obj) {\n      console.log(\"emitting result\", obj);\n      const avail = obj.find(e => e[\"id\"] == this.TestQuiz[this.currentQuestion].qno);\n\n      if (avail && Object.values(avail).every(v => v)) {\n        document.getElementById(`b${this.currentQuestion}`).style.backgroundColor = \"#0081d6\";\n        document.getElementById(`b${this.currentQuestion}`).style.color = \"white\";\n      } else {\n        document.getElementById(`b${this.currentQuestion}`).style.backgroundColor = \"#ffffff\";\n        document.getElementById(`b${this.currentQuestion}`).style.color = \"black\";\n      }\n\n      this.answerSubmittedObj = obj;\n    }\n\n    submitExampleTest() {\n      var _a;\n\n      if (((_a = this.answerSubmittedObj) === null || _a === void 0 ? void 0 : _a.length) > 0 && Object.values(this.answerSubmittedObj).every(v => Object.values(v).every(val => val)) && this.answerSubmittedObj.length == this.TestQuiz.length) {\n        console.log(\"submitted!\");\n        this.answerSheet.push(...this.answerSubmittedObj);\n        this.currentQuestion = 0;\n        this.answerSubmittedObj = [];\n\n        if (this.uniqueRelation.length > 1) {\n          this.uniqueRelation.shift();\n          this.submissionPart = false;\n          this.TestQuiz = this.totalQuizQues.filter(obj => obj.relation == this.uniqueRelation[0]);\n\n          if (this.TestQuiz.length > 4) {\n            this.boxPaginationLogic();\n          }\n        } else {\n          this.router.navigate([\"base/test\"]);\n        }\n      } else {\n        alert(\"Please answer all questions\");\n      }\n    }\n\n    getTest1list() {\n      this.testService.getTest1Questionlist().subscribe(res => {\n        this.totalQuizQues = res;\n        let unique = [];\n        res.forEach(element => {\n          unique.push(element.relation);\n        });\n        this.uniqueRelation = [...new Set(unique)];\n        this.TestQuiz = res.filter(obj => obj.relation == this.uniqueRelation[0]);\n        this.currentQuestion = 0;\n\n        if (this.TestQuiz.length > 4) {\n          this.boxPaginationLogic();\n          console.log(this.incrementBoxes);\n        }\n      });\n    }\n\n    boxPaginationLogic() {\n      var _a;\n\n      let boxAr = Array.from(Array(this.TestQuiz.length).keys());\n      this.indexAr = [...boxAr];\n      let incrementCopy;\n\n      if (this.incrementBoxes) {\n        incrementCopy = [...this.incrementBoxes];\n      }\n\n      console.log(\"incrementBoxValue at currentQuestion\", this.currentQuestion, \":\", incrementCopy);\n      let pager = this.pagerService.getPager(boxAr.length, this.currentQuestion);\n      this.incrementBoxes = incrementCopy === null || incrementCopy === void 0 ? void 0 : incrementCopy.slice(pager.startIndex, pager.endIndex + 1);\n      /* if(incrementCopy?.[0] == this.currentQuestion){\n        console.log(\"clicked previous\",this.currentQuestion)\n        let startIndex = this.currentQuestion-4 < 0 ? this.currentQuestion-4 : 0\n        this.incrementBoxes = this.indexAr.slice(startIndex,this.currentQuestion)\n        console.log(\"incrementBoxValue at currentQuestion,firstlogic\",this.currentQuestion,\":\",this.incrementBoxes)\n           }\n      else{\n        console.log(\"clicked next\",this.currentQuestion)\n             let endIndex = this.currentQuestion == boxAr.length ? boxAr.length : this.currentQuestion+4\n        this.incrementBoxes = this.indexAr.slice(this.currentQuestion,endIndex)\n        console.log(\"incrementBoxValue at currentQuestion,lastlogic\",this.currentQuestion,\":\",this.incrementBoxes)\n       \n      } */\n\n      console.log(this.answerSubmittedObj);\n      (_a = this.answerSubmittedObj) === null || _a === void 0 ? void 0 : _a.forEach(element => {\n        if (this.incrementBoxes.includes(element[\"id\"])) {\n          document.getElementById(`b${this.currentQuestion}`).style.backgroundColor = \"#0081d6\";\n          document.getElementById(`b${this.currentQuestion}`).style.color = \"white\";\n        } else {\n          document.getElementById(`b${this.currentQuestion}`).style.backgroundColor = \"#ffffff\";\n          document.getElementById(`b${this.currentQuestion}`).style.color = \"black\";\n        }\n      });\n    }\n\n  }\n\n  TestScreenComponent.ɵfac = function TestScreenComponent_Factory(t) {\n    return new (t || TestScreenComponent)(i0.ɵɵdirectiveInject(i1.TestService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.PagerService));\n  };\n\n  TestScreenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TestScreenComponent,\n    selectors: [[\"app-test-screen\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-12\"], [\"class\", \"data-card\", 4, \"ngIf\"], [1, \"data-card\"], [1, \"questionNumberContainer\"], [\"class\", \"questionNumberBox\", 3, \"id\", \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"ml-auto\", 4, \"ngIf\"], [3, \"TestQuiz\", \"submissionPart\", \"questionIncrement\", \"finalObj\"], [1, \"questionNumberBox\", 3, \"id\", \"ngClass\"], [\"aria-hidden\", \"true\", \"fa-lg\", \"\", 1, \"fa\", \"fa-circle\"], [1, \"ml-auto\"], [1, \"btn\", \"btn-primary\", \"squareButtons\", 3, \"click\"]],\n    template: function TestScreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, TestScreenComponent_div_3_Template, 8, 6, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.TestQuiz);\n      }\n    },\n    directives: [i4.NgIf, i4.NgForOf, i5.CareerProfilerComponent, i4.NgClass],\n    styles: [\".data-card[_ngcontent-%COMP%]{display:flex;flex-direction:column;min-height:20px;overflow:hidden;border-radius:.5em;text-decoration:none;margin:1em;box-shadow:1em 1em 1.5em -.5em #0000001a;transition:transform .45s ease,background .45s ease;background-color:#ecf3f4;justify-content:center}h5[_ngcontent-%COMP%]{padding:20px;background-color:#fff;font-size:15px}.inner-data-card[_ngcontent-%COMP%]{padding:2.5em;background-color:#fff;font-size:15px}.inner-data-card[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:10px;font-size:18px;color:#d3d3d3}.inner-data-card[_ngcontent-%COMP%]   .choiceContainer[_ngcontent-%COMP%]{padding:1em}.inner-data-card[_ngcontent-%COMP%]   .question[_ngcontent-%COMP%]{font-weight:600}.stepBtn[_ngcontent-%COMP%]{border-radius:5px;padding:4px 10px;background-color:#ecf3f4}.stepBtn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#000;margin:3px}.btn-primary.disabled[_ngcontent-%COMP%], .btn-primary[_ngcontent-%COMP%]:disabled{background-color:#d3d3d3!important}.questionNumberContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;margin:20px 1em 0}.questionNumberContainer[_ngcontent-%COMP%]   .questionNumberBox[_ngcontent-%COMP%]{min-width:25px;max-height:25px;margin-right:10px;background-color:#fff;border-radius:3px}.questionNumberContainer[_ngcontent-%COMP%]   .questionNumberBox[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:14px;text-align:center}.activeClass[_ngcontent-%COMP%]{transform:scale(1.5)}sub[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding:12px 3px 8px;font-size:6px}.filledQuesClass[_ngcontent-%COMP%]{background-color:#0081d6!important;color:#fff}\"]\n  });\n  return TestScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}