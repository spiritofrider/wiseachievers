{"ast":null,"code":"import { tap, finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/storage.service\";\nimport * as i4 from \"../services/loader.service\";\nexport let JwtInterceptor = /*#__PURE__*/(() => {\n  class JwtInterceptor {\n    constructor(cookieService, router, storageService, loader) {\n      this.cookieService = cookieService;\n      this.router = router;\n      this.storageService = storageService;\n      this.loader = loader;\n      this.requestCounter = 0;\n    }\n\n    intercept(request, next) {\n      this.requestCounter++;\n      /*  request = request.clone({\n                setHeaders: {\n                 Authorization: `Bearer ` + sessionStorage.getItem('accessToken')\n                }, withCredentials: true\n            }) */\n\n      return next.handle(request).pipe(tap(event => {\n        this.loader.show('');\n      }, error => {}), finalize(() => {\n        this.requestCounter--;\n\n        if (this.requestCounter == 0) {\n          this.loader.hide();\n        }\n      }));\n    }\n\n  }\n\n  JwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) {\n    return new (t || JwtInterceptor)(i0.ɵɵinject(i1.CookieService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.StorageService), i0.ɵɵinject(i4.LoaderService));\n  };\n\n  JwtInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtInterceptor,\n    factory: JwtInterceptor.ɵfac\n  });\n  return JwtInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}