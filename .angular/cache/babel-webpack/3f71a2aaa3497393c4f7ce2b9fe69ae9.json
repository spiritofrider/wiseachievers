{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/tooltip\";\nexport let FilterComponent = /*#__PURE__*/(() => {\n  class FilterComponent {\n    constructor() {\n      this.ChangedData = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    fnShowFilter(show, clear) {\n      show.style.display = \"none\";\n      clear._elementRef.nativeElement.style.display = \"contents\";\n    }\n\n    applyFilterNew(value, colName) {\n      let items = [];\n\n      if (value) {\n        this.mainDataCopy.forEach(search => {\n          if (search[colName]) {\n            if (search[colName].toLowerCase().indexOf(value.toLowerCase()) > -1) {\n              items.push(search);\n            }\n          }\n        });\n        this.mainData = items;\n      } else {\n        this.mainData = this.mainDataCopy;\n      }\n\n      this.ChangedData.emit(this.mainData);\n    }\n\n    fnHideFilter(key, show, clear, input) {\n      this.applyFilterNew('', key);\n      show.style.display = \"contents\";\n      clear._elementRef.nativeElement.style.display = \"none\";\n      input.value = '';\n    }\n\n  }\n\n  FilterComponent.ɵfac = function FilterComponent_Factory(t) {\n    return new (t || FilterComponent)();\n  };\n\n  FilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilterComponent,\n    selectors: [[\"filter\"]],\n    inputs: {\n      mainData: \"mainData\",\n      mainDataCopy: \"mainDataCopy\",\n      displayData: \"displayData\",\n      property: \"property\"\n    },\n    outputs: {\n      ChangedData: \"ChangedData\"\n    },\n    decls: 13,\n    vars: 1,\n    consts: [[2, \"display\", \"inline-flex\", \"width\", \"100%\", \"line-height\", \"18px\"], [1, \"\"], [2, \"width\", \"100%\", \"text-align\", \"right\"], [\"tooltip\", \"Enable Search Filter\", \"aria-hidden\", \"true\", 1, \"fa\", \"fa-filter\", \"fa-icon\", 2, \"cursor\", \"pointer\", \"display\", \"block\", \"font-size\", \"14px\", 3, \"click\"], [\"showFilter\", \"\"], [\"appearance\", \"outline\", 1, \"dataFilter\", 2, \"display\", \"none\", \"font-size\", \"8px\"], [\"clearFilter\", \"\"], [\"matInput\", \"\", \"autocomplete\", \"off\", 3, \"keyup\"], [\"inputFilter\", \"\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", \"matTooltip\", \"Clear And Remove Search Filter\", 1, \"close-btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-times\", \"mat-icon-replacement\", \"mat-cross-rep\"]],\n    template: function FilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"span\", 2);\n        i0.ɵɵelementStart(4, \"i\", 3, 4);\n        i0.ɵɵlistener(\"click\", function FilterComponent_Template_i_click_4_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r0 = i0.ɵɵreference(5);\n\n          const _r1 = i0.ɵɵreference(8);\n\n          return ctx.fnShowFilter(_r0, _r1);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵelementStart(7, \"mat-form-field\", 5, 6);\n        i0.ɵɵelementStart(9, \"input\", 7, 8);\n        i0.ɵɵlistener(\"keyup\", function FilterComponent_Template_input_keyup_9_listener($event) {\n          return ctx.applyFilterNew($event.target.value, ctx.property);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function FilterComponent_Template_button_click_11_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r0 = i0.ɵɵreference(5);\n\n          const _r1 = i0.ɵɵreference(8);\n\n          const _r2 = i0.ɵɵreference(10);\n\n          return ctx.fnHideFilter(ctx.property, _r0, _r1, _r2);\n        });\n        i0.ɵɵelement(12, \"i\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.displayData);\n      }\n    },\n    directives: [i1.MatFormField, i2.MatInput, i3.MatButton, i1.MatSuffix, i4.MatTooltip],\n    styles: [\"\"]\n  });\n  return FilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}